reference : https://cplusplus.com/reference/vector/vector

///////////////////////////

definition

///////////////////////////

almost same as array, but size is changeable!!
배열과 거의 동일한 기능을 수행하는 자료구조, 배열과 마찬가지로 원소가 메모리에 연속하게 저장되어 있기 떄문에 O(1)에 인덱스를 가지고 각 원소로 접근 가능.
단, 배열과 달리 크기를 자유자재로 변경할 수 있다!!

e.g.

#include <iostream>
#include <vector>
using namespace std;

int main(void) {
  vector<int> v1(3, 5); // {5,5,5};
  cout << v1.size() << '\n'; // 3
  v1.push_back(7); // {5,5,5,7}; push value to vector 벡터 제일 끝에 원소 추가하기 O(1) <-> push_front() 벡터 제일 앞에 원소 추가하기 O(N)

  vector<int> v2(2); // {0,0};
  v2.insert(v2.begin()+1, 3); // {0,3,0}; 기본적으로 구현이 되어 있다.  [begin,end) end는 마지막을 실제로 가리키는건 아니다.

  vector<int> v3 = {1,2,3,4}; // {1,2,3,4}
  v3.erase(v3.begin()+2); // {1,2,4}; 기본적으로 구현이 되어 있다.

  vector<int> v4; // {}
  v4 = v3; // {1,2,4}
  cout << v4[0] << v4[1] << v4[2] << '\n';
  v4.pop_back(); // {1,2} 벡터에 제일 끝 원소 제거하기 O(1) <-> pop_front() 벡터 제일 앞에 원소 제거하기 O(N)
  v4.clear(); // {}
}
출처 : https://github.com/encrypted-def/basic-algo-lecture/blob/master/0x03/vector_example.cpp
